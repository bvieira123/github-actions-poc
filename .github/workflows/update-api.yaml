name: Update API Config
on:
  pull_request: 
    branches: 
      - main
  push:
    branches:
      - main
env:
  GITHUB_ENV: $GITHUB_ENV
  GITHUB_OUTPUT: $GITHUB_OUTPUT
jobs:
  update_api:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.define_matrix_config_files.outputs.IMPORT_CONFIG_FILES }}
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Get changes
        run: |
          CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep -v '^.github/workflows/' | grep -v '^pyscripts/' | paste -sd ',')
          echo "CHANGES=$CHANGES" >> $GITHUB_ENV
          echo "CHANGES: $CHANGES"

      - name: Get Config Files
        env:
          CHANGES: ${{ env.CHANGES }}
        run: python ./pyscripts/get-config-files.py

        id: define_matrix_config_files
      - name: Check if config file is new or is an update
        env:
          CONFIG_FILES: ${{ env.CONFIG_FILES }}
          APIM_INSTANCE_IP: ${{ vars.APIM_INSTANCE_IP }}
          APIM_INSTANCE_USER: ${{ vars.APIM_INSTANCE_USER }}
          APIM_INSTANCE_PASSWORD: ${{ secrets.APIM_INSTANCE_PASSWORD }}
        run: python ./pyscripts/check-if-config-file-exists.py

      - name: Update api's
        if: env.UPDATE_CONFIG_FILES != ''
        run: |
          files=$(echo "${{ env.UPDATE_CONFIG_FILES }}" | jq -r '.[]')
          for file in $files; do
            echo "getting api definition..."
            API_DEFINITION=$(jq -r '.apiSpecification.resource' "$file")
            echo "api definition: $API_DEFINITION"
            path=$(jq -r '.path' "$file")
            echo "Update api with apim-cli with config file: $file"
            docker run --name apim-cli \
            -e LOG_LEVEL=DEBUG -v "${{ github.workspace }}/$file:/$file" \
            -v "${{ github.workspace }}/$API_DEFINITION:/$API_DEFINITION" bvieira123/apim-cli:1.14.4  \
            apim api import -h ${{ vars.APIM_INSTANCE_IP }} -u ${{ vars.APIM_INSTANCE_USER }} -port 8075 \
            -p ${{ secrets.APIM_INSTANCE_PASSWORD }} -c "/$file" -force
            docker rm apim-cli -f
          done
          echo "All file updated..."
  trigger_import:
    needs: update_api
    uses: ./.github/workflows/import-api.yaml
    with:
      config-file: ${{ matrix.IMPORT_CONFIG_FILES }}
    strategy:
      matrix:
        IMPORT_CONFIG_FILES: ${{fromJson(needs.update_api.outputs.matrix)}}