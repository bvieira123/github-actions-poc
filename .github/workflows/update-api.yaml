name: Update API Config
on:
  push:
    branches:
      - main

jobs:
  update_api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changes
        id: get_changes
        run: |
          # Fetch changes once
          CHANGES=$(git diff --name-only e4796ed8c22869f94b9b3f8acfdef6bd831e2082 c3b8de365682ab9f9a9186883ae6bca83266e17b | grep -vE '\.ya?ml$')
          echo "Changes: $CHANGES"

          # Create a comma-separated list of config JSON files
          CONFIG_FILES=$(echo "$CHANGES" | grep -E '.*-config\.json$' | paste -sd ',')
          echo "Config Files: $CONFIG_FILES"

          # Create a comma-separated list of API definition files
          API_DEFINITION=$(echo "$CHANGES" | grep -vE '(-config\.json|\.ya?ml)$' | paste -sd ',')
          echo "API Definitions: $API_DEFINITION"

          # Remove file extensions
          CONFIG_FILES=$(echo "$CONFIG_FILES" | sed 's/\.[^.]*$//')
          API_DEFINITION=$(echo "$API_DEFINITION" | tr ' ' '\n' | sed 's/\.[^.]*$//' | paste -sd ',' -)
          echo "After removing extensions - API Definitions: $API_DEFINITION"

          # Export to environment
          echo "CONFIG_FILES=$CONFIG_FILES" >> $GITHUB_ENV
          echo "API_DEFINITION=$API_DEFINITION" >> $GITHUB_ENV

      - name: Process API Definitions
        if: env.API_DEFINITION != '' && env.CONFIG_FILES == ''
        run: |
          IFS=',' read -ra ADDR <<< "$API_DEFINITION"
          for value in "${ADDR[@]}"; do
            echo "Processing $value"
            filename="${value##*/}"
            matches=$(grep -rl "$filename" $PWD/*.json)
            if [-z "${CONFIG_FILES}" ]
              CONFIG_FILES="$matches"
            else
              CONFIG_FILES="$CONFIG_FILES,$matches"
          done
          echo "CONFIG_FILES=$CONFIG_FILES" >> $GITHUB_ENV

      - name: Display Config Files

        run: echo "$CONFIG_FILES"
